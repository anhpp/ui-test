package org.exoplatform.selenium.platform.calendar.sniff;

import static org.exoplatform.selenium.TestLogger.info;

import org.exoplatform.selenium.Button;
import org.exoplatform.selenium.Utils;
import org.exoplatform.selenium.platform.ManageAccount;
import org.exoplatform.selenium.platform.calendar.CalendarBase;
import org.exoplatform.selenium.platform.calendar.Event;
import org.exoplatform.selenium.platform.calendar.Event.recurringType;
import org.exoplatform.selenium.platform.calendar.Event.repeatEndType;
import org.exoplatform.selenium.platform.calendar.Event.repeatType;
import org.openqa.selenium.By;
import org.testng.annotations.*;


/**
 * @author phuongdt
 *
 */
public class Calendar_Event_RecurringEvents extends CalendarBase {

	ManageAccount acc;
	Event evt;

	@BeforeMethod
	public void setUpBeforeTest(){
		getDriverAutoSave();
		acc = new ManageAccount(driver, this.plfVersion);
		evt = new Event(driver, this.plfVersion);
		button = new Button(driver, this.plfVersion);
		acc.signIn(DATA_USER1, DATA_PASS);
	}

	@AfterMethod
	public void afterTest(){
		driver.manage().deleteAllCookies();
		driver.quit();
	}
	/**
	 *Case ID:109217.
	 *Test Case Name: Add a Recurring Events.
	 *Pre-Condition: 
	 *Post-Condition: 
	 *Done with OSs and browsers : 
	 *Generated by phuongdt at 2014/03/24 14:55:52
	 */
	@Test
	public  void test01_AddARecurringEvents() {
		String name ="event 109217";
		String description = "description 109217";
		info("Test 1: Add a Recurring Events");
		/*Step Number: 1
		 *Step Name: Step 1: Show calendar application
		 *Step Description: 
			- Connect to Intranet
			- Choose Calendar application
		 *Input Data: 

		 *Expected Outcome: 
			- The Calendar is displayed*/
		goToCalendarPage();

		/*Step number: 2
		 *Step Name: Step 2: Show Add event form
		 *Step Description: 
			Click Event on action bar
		 *Input Data: 

		 *Expected Outcome: 
			- The pop up "Quick Add Event" is displayed*/
		evt.goToAddEventFromActionBar();

		/*Step number: 3
		 *Step Name: Step 3: Add a recurring event
		 *Step Description: 
			- Input some requiredfields
			- Click [More Details]
			- Tick Repeat option 
			- Select Repeat, eg daily, Repeat every 1 day andEnd repeat after 5 occurrence
			- Save
			- Save
		 *Input Data: 

		 *Expected Outcome: 
			-The default duration for Event (From
			-To) is 1 hour
			- Series of events is displayed as setting repeat.*/
		evt.inputBasicQuickEvent(name, description);
		String fromTime = waitForAndGetElement(evt.ELEMENT_INPUT_EVENT_FROM_TIME_CURRENT_VALUE,5000,1,2).getAttribute("value");
		String toTime = waitForAndGetElement(evt.ELEMENT_INPUT_EVENT_TO_TIME_CURRENT_VALUE,5000,1,2).getAttribute("value");
		Integer fromHour;
		Integer toHour;
		if (fromTime.substring(0, toTime.indexOf(":")).startsWith("0"))
			fromHour=Integer.valueOf(fromTime.substring(1, toTime.indexOf(":")));
		else
			fromHour=Integer.valueOf(fromTime.substring(0, toTime.indexOf(":")));
		if (toTime.substring(0, toTime.indexOf(":")).startsWith("0"))
			toHour=Integer.valueOf(toTime.substring(1, toTime.indexOf(":")));
		else
			toHour=Integer.valueOf(toTime.substring(0, toTime.indexOf(":")));

		assert (toHour-fromHour==1);
		assert (fromTime.substring(fromTime.indexOf(":")+1).equalsIgnoreCase(fromTime.substring(toTime.indexOf(":")+1)));
		Utils.pause(3000);
		evt.inputFromToEvent(getDate(0,"MM/dd/yyyy"), getDate(0,"MM/dd/yyyy"), false);
		click(evt.ELEMENT_BUTTON_EVENT_MORE_DETAILS);
		Utils.pause(1000);
		check(evt.ELEMENT_IS_REPEAT_CHECKBOX,2);
		evt.inputRecurringInfoEvent(repeatType.Daily, null, null, repeatEndType.After);
		click(evt.ELEMENT_ADD_EVENT_SAVE_BUTTON);
		waitForElementNotPresent(evt.ELEMENT_ADD_EVENT_POPUP);
		Utils.pause(3000);

		info("Confirm added event displays in the calendar");
		assert evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"), selectDayOption.ONEDAY);


		/*Clear data*/
		info("Clear data");
		evt.deleteRecurringEvent(name, selectDayOption.ONEDAY, recurringType.ALL_EVENT,getDate(0, "MMM dd yyyy"));
	}

	/**
	 *Case ID:109218.
	 *Test Case Name: An extra icon is displayed for a repeated event.
	 *Pre-Condition: 
	 *Post-Condition: 
	 *Done with OSs and browsers : 
	 *Generated by phuongdt at 2014/03/24 14:55:52
	 *PENDING: Can't verify icon of event
	 */
	@Test
	public  void test02_AnExtraIconIsDisplayedForARepeatedEvent() {
		String name ="event 109218";
		String description = "description 109218";
		info("Test 2: An extra icon is displayed for a repeated event");
		/*Step Number: 1
		 *Step Name: Step 1: Open the calendar application
		 *Step Description: 
			- Connect to Intranet
			- Choose Calendar application
		 *Input Data: 

		 *Expected Outcome: 
			- The Calendar is displayed*/
		goToCalendarPage();

		/*Step number: 2
		 *Step Name: Step 2: Add a recurring event
		 *Step Description: 
			- Create a Recurring event
		 *Input Data: 

		 *Expected Outcome: 
			- Series of events is displayed with an extra icon, see attachment [extraIcon.png]*/

		evt.goToAddEventFromActionBar();
		evt.inputBasicQuickEvent(name, description);
		evt.inputFromToEvent(getDate(0,"MM/dd/yyyy"), getDate(0,"MM/dd/yyyy"), false);
		click(evt.ELEMENT_BUTTON_EVENT_MORE_DETAILS);
		Utils.pause(1000);
		check(evt.ELEMENT_IS_REPEAT_CHECKBOX,2);
		evt.inputRecurringInfoEvent(repeatType.Daily, null, null, repeatEndType.After);
		click(evt.ELEMENT_ADD_EVENT_SAVE_BUTTON);
		waitForElementNotPresent(evt.ELEMENT_ADD_EVENT_POPUP);
		Utils.pause(1000);

		info("Confirm added event displays in the calendar");
		assert evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"), selectDayOption.ONEDAY);


		/*Step number: 3
		 *Step Name: Step 3: Check show the popover
		 *Step Description: 
			- Move the mouse over the event
		 *Input Data: 

		 *Expected Outcome: 
			- The popover of the event shows + Title of event+ Description+ Location+ Time+ Icon is the same icon with the label "Recurring event", pls see attachment [Recurring_icon_On_Popover.png]*/
		mouseOver(By.xpath(ELEMENT_EVENT_TASK_DETAIL_DATE.replace("${taskName}", name).replace("${date}", getDate(0, "MMM dd yyyy"))),true);
		waitForAndGetElement(evt.ELEMENT_TITLE_RECURRING_EVENT);
		waitForAndGetElement(evt.ELEMENT_DATE_TIME_RECURRING_EVENT);
		waitForAndGetElement(evt.ELEMENT_RECURRING_TEXT_RECURRING_EVENT);

		/*Clear data*/
		info("Clear data");
		evt.deleteRecurringEvent(name, selectDayOption.ONEDAY, recurringType.ALL_EVENT,getDate(0, "MMM dd yyyy"));
	}

	/**
	 *Case ID:109219.
	 *Test Case Name: Edit a recurring event with "Only this event" option.
	 *Pre-Condition: A recurring event is created
	 *Post-Condition: 
	 *Done with OSs and browsers : 
	 *Generated by phuongdt at 2014/03/24 14:55:52
	 *
	 */
	@Test
	public  void test03_EditARecurringEventWithOnlyThisEventOption() {
		String name ="event 109219";
		String description = "description 109219";
		String newName = "newevent109219";
		info("Test 3: Edit a recurring event with Only this event option");
		/*Step Number: 1
		 *Step Name: Step 1: Show recurring event
		 *Step Description: 
			- Connect to Intranet
			- Choose Calendar application
		 *Input Data: 

		 *Expected Outcome: 
			- The Calendar is displayed
			- A recurring event is displayed*/
		goToCalendarPage();
		evt.goToAddEventFromActionBar();
		evt.inputBasicQuickEvent(name, description);
		evt.inputFromToEvent(getDate(0,"MM/dd/yyyy"), getDate(0,"MM/dd/yyyy"), true);
		click(evt.ELEMENT_BUTTON_EVENT_MORE_DETAILS);
		Utils.pause(1000);
		check(evt.ELEMENT_IS_REPEAT_CHECKBOX,2);
		evt.inputRecurringInfoEvent(repeatType.Daily, null, null, repeatEndType.After);
		click(evt.ELEMENT_ADD_EVENT_SAVE_BUTTON);
		waitForElementNotPresent(evt.ELEMENT_ADD_EVENT_POPUP);
		Utils.pause(1000);
		info("Confirm added event displays in the calendar");
		assert evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"), selectDayOption.ALLDAY);
		assert evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"), selectDayOption.ALLDAY);
		assert evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"), selectDayOption.ALLDAY);

		/*Step number: 2
		 *Step Name: Step 2: Show Edit an event form
		 *Step Description: 
			- Edit an even from the series
		 *Input Data: 

		 *Expected Outcome: 
			- The pop up "Edit Recurring event" is displayed
			- The icon "Repeat" is checked*/

		/*Step number: 3
		 *Step Name: Step 3: Edit repeat option
		 *Step Description: 
			- Edit the repeat option
			- Click "Save"
		 *Input Data: 

		 *Expected Outcome: 
			- A confirmation pop up is displayed to ask user: "Would you like to change only this event, all events in the series, or this and all following events in the series?"
			- 3 options:  + Only this event + Following events + All events
			- The option "Only this Event" is selcted by Default*/

		/*Step number: 4
		 *Step Name: Step 4: Choose option to change
		 *Step Description: 
			- Choose the Defeult option "Only this Event"
			- Click "Save"
		 *Input Data: 

		 *Expected Outcome: 
			- Changes are restricted to the edited recurring event*/
		evt.editRecurringEvent(name,newName,description, null,null,null,true,selectDayOption.ALLDAY,recurringType.ONLY_EVENT,getDate(1, "MMM dd yyyy"));
		assert evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"), selectDayOption.ALLDAY);
		assert !evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"), selectDayOption.ALLDAY);
		assert evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"), selectDayOption.ALLDAY);
		assert evt.verifyEventInWeekView(newName, getDate(1, "MMM dd yyyy"), selectDayOption.ALLDAY);

		/*Clear data*/
		info("Clear data");
		evt.deleteRecurringEvent(name, selectDayOption.ALLDAY, recurringType.ALL_EVENT,getDate(0, "MMM dd yyyy"));
		evt.deleteEventTask(newName);
	}

	/**
	 *Case ID:109220.
	 *Test Case Name: Delete all events.
	 *Pre-Condition: A recyrring events is created
	 *Post-Condition: 
	 *Done with OSs and browsers : 
	 *Generated by phuongdt at 2014/03/24 14:55:52
	 */
	@Test
	public  void test04_DeleteAllEvents() {
		String name ="event 109220";
		String description = "description 109220";
		info("Test 4: Delete all events");
		/*Step Number: 1
		 *Step Name: <p>Step 1:Show Recurring event<br></p>
		 *Step Description: 
			- Connect to Intranet
			- Open "Calendar" application
		 *Input Data: 

		 *Expected Outcome: 
			- A recurring events is displayed*/
		goToCalendarPage();
		evt.goToAddEventFromActionBar();

		evt.inputBasicQuickEvent(name, description);
		evt.inputFromToEvent(getDate(0,"MM/dd/yyyy"), getDate(0,"MM/dd/yyyy"), false);
		click(evt.ELEMENT_BUTTON_EVENT_MORE_DETAILS);
		Utils.pause(1000);
		check(evt.ELEMENT_IS_REPEAT_CHECKBOX,2);
		evt.inputRecurringInfoEvent(repeatType.Daily, null, null, repeatEndType.After);
		click(evt.ELEMENT_ADD_EVENT_SAVE_BUTTON);
		waitForElementNotPresent(evt.ELEMENT_ADD_EVENT_POPUP);
		Utils.pause(1000);

		info("Confirm added event displays in the calendar");
		assert evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"), selectDayOption.ONEDAY);
		/*Step number: 2
		 *Step Name: <p>Step 2: Choose an event from the series<br></p>
		 *Step Description: 
			- Right click on event from the series
			- Choose the option "Delete"
		 *Input Data: 

		 *Expected Outcome: 
			<p>
			- A pop up is displayed with:<br>* A title: "Delete Recurring Event"<br>* A message: Would you like to delete only this event, all events in the series, or this and all following events in the series?<br>* The option 'Only this event" is selected by default<br>* A button "Delete"</p>*/

		/*Step number: 3
		 *Step Name: <p>Step 3: Delete event<br data
		-mce
		-bogus="1"></p>
		 *Step Description: 
			<p>
			- Choose the default option "All events"<br>
			- Click "Delete"</p>
		 *Input Data: 

		 *Expected Outcome: 
			<p>
			- All events are deletes</p><p>
			- Series no longer exists</p>*/ 
		evt.deleteRecurringEvent(name, selectDayOption.ONEDAY, recurringType.ALL_EVENT,getDate(0, "MMM dd yyyy"));
		assert !evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert !evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert !evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"), selectDayOption.ONEDAY);
	}

	/**
	 *Case ID:109222.
	 *Test Case Name: Drag and drop an occurrence in recurring event.
	 *Pre-Condition: A recurring event is created
	 *Post-Condition: 
	 *Done with OSs and browsers : 
	 *Generated by phuongdt at 2014/03/24 14:55:52
	 */
	@Test
	public  void test05_DragAndDropAnOccurrenceInRecurringEvent() {
		String name ="event 109222";
		String description = "description 109222";
		info("Test 5: Drag and drop an occurrence in recurring event");
		/*Step Number: 1
		 *Step Name: Step 1: Show recurring event
		 *Step Description: 
			- Connect to Intranet
			- Choose Calendar application
		 *Input Data: 

		 *Expected Outcome: 
			- The Calendar is displayed
			- A recurring event is displayed*/
		goToCalendarPage();
		evt.goToAddEventFromActionBar();
		evt.inputBasicQuickEvent(name, description);
		evt.inputFromToEvent(getDate(0,"MM/dd/yyyy"), getDate(0,"MM/dd/yyyy"), false);
		click(evt.ELEMENT_BUTTON_EVENT_MORE_DETAILS);
		Utils.pause(1000);
		check(evt.ELEMENT_IS_REPEAT_CHECKBOX,2);
		evt.inputRecurringInfoEvent(repeatType.Daily, null, null, repeatEndType.After);
		click(evt.ELEMENT_ADD_EVENT_SAVE_BUTTON);
		waitForElementNotPresent(evt.ELEMENT_ADD_EVENT_POPUP);
		Utils.pause(1000);

		info("Confirm added event displays in the calendar");
		assert evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"), selectDayOption.ONEDAY);

		/*Step number: 2
		 *Step Name: Step 2: Drag and drop an event
		 *Step Description: 
			- Drag and drop an event from the series, Select only this event. Save
		 *Input Data: 

		 *Expected Outcome: 
			- Start and End dates and times of event are updated
			- Event is marked as 'edited' by an icon with tooltip.*/
		dragAndDropToObject(By.xpath(ELEMENT_EVENT_TASK_DETAIL_DATE.replace("${taskName}", name).replace("${date}", getDate(0, "MMM dd yyyy"))),By.xpath(ELEMENT_ANY_TARGET_DATE.replace("${targetDate}", getDate(1, "MMM dd yyyy HH")+":00:00")));
		Utils.pause(2000);

		/*Step number: 3
		 *Step Name: Step 3: Check show tooltip after drag and drop event
		 *Step Description: 
			- Move the mouse over the icon
		 *Input Data: 

		 *Expected Outcome: 
			A tooltip is displayed "edited recurring event"*/ 
		mouseOver(By.xpath(ELEMENT_EVENT_TASK_DETAIL_DATE.replace("${taskName}", name).replace("${date}", getDate(1, "MMM dd yyyy"))),true);
		waitForAndGetElement(evt.ELEMENT_TITLE_RECURRING_EVENT);
		waitForAndGetElement(evt.ELEMENT_DATE_TIME_RECURRING_EVENT);
		assert waitForAndGetElement(evt.ELEMENT_EDITED_RECURRING_TEXT_RECURRING_EVENT).getText().contains("Edited Recurring event");

		/*Clear data*/
		info("Clear data");
		evt.deleteEventTask(name);
		evt.deleteRecurringEvent(name, selectDayOption.ONEDAY, recurringType.ALL_EVENT,getDate(1, "MMM dd yyyy"));


	}

	/**
	 *Case ID:109223.
	 *Test Case Name: Delete only a current recurring event.
	 *Pre-Condition: A recurring events is created
	 *Post-Condition: 
	 *Done with OSs and browsers : 
	 *Generated by phuongdt at 2014/03/24 14:55:52
	 */
	@Test
	public  void test06_DeleteOnlyACurrentRecurringEvent() {
		String name ="event 109223";
		String description = "description 109223";
		info("Test 6: Delete only a current recurring event");
		/*Step Number: 1
		 *Step Name: <p>Step 1: Show calendar application<br data
		-mce
		-bogus="1"></p>
		 *Step Description: 
			- Connect to Intranet
			- Open "Calendar" application
		 *Input Data: 

		 *Expected Outcome: 
			- A recurring events is displayed*/
		goToCalendarPage();
		evt.goToAddEventFromActionBar();

		evt.inputBasicQuickEvent(name, description);
		evt.inputFromToEvent(getDate(0,"MM/dd/yyyy"), getDate(0,"MM/dd/yyyy"), false);
		click(evt.ELEMENT_BUTTON_EVENT_MORE_DETAILS);
		Utils.pause(1000);
		check(evt.ELEMENT_IS_REPEAT_CHECKBOX,2);
		evt.inputRecurringInfoEvent(repeatType.Daily, null, null, repeatEndType.After);
		click(evt.ELEMENT_ADD_EVENT_SAVE_BUTTON);
		waitForElementNotPresent(evt.ELEMENT_ADD_EVENT_POPUP);
		Utils.pause(1000);

		info("Confirm added event displays in the calendar");
		assert evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"), selectDayOption.ONEDAY);
		/*Step number: 2
		 *Step Name: <p>Step 2: Select a recurring event<br data
		-mce
		-bogus="1"></p>
		 *Step Description: 
			- Right click on event from the series
			- Choose the option "Delete"
		 *Input Data: 

		 *Expected Outcome: 
			- A pop upis displayed with:* A title: "Delete Recurring Event"* A message: Would you like to delete only this event, all events in the series, or this and all following events in the series?* The option 'Only this event" is selected by default* A button "Delete"*/

		/*Step number: 3
		 *Step Name: <p>Step 3: Delete only this event<br data
		-mce
		-bogus="1"></p>
		 *Step Description: 
			- Choose the default option "Only this event"
			- Click "Delete"
		 *Input Data: 

		 *Expected Outcome: 
			- Only current event is deleted from the series*/ 
		evt.deleteRecurringEvent(name, selectDayOption.ONEDAY, recurringType.ONLY_EVENT,getDate(0, "MMM dd yyyy"));
		assert !evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"), selectDayOption.ONEDAY);
		/*Clear data*/
		info("Clear data");
		evt.deleteRecurringEvent(name, selectDayOption.ONEDAY, recurringType.ALL_EVENT,getDate(1, "MMM dd yyyy"));
	}

	/**
	 *Case ID:109234.
	 *Test Case Name: Edit a recurring event with "Following events" option.
	 *Pre-Condition: A recurring event is created
	 *Post-Condition: 
	 *Done with OSs and browsers : 
	 *Generated by phuongdt at 2014/03/24 14:55:52
	 */
	@Test
	public  void test07_EditARecurringEventWithFollowingEventsOption() {
		String name ="event 109234";
		String description = "description 109234";
		String newName = "newevent109234";
		info("Test 7: Edit a recurring event with Following events option");
		/*Step Number: 1
		 *Step Name: Step 1: Show recurring event
		 *Step Description: 
			- Connect to Intranet
			- Choose Calendar application
		 *Input Data: 

		 *Expected Outcome: 
			- The Calendar is displayed
			- A recurring event is displayed*/
		goToCalendarPage();
		evt.goToAddEventFromActionBar();
		evt.inputBasicQuickEvent(name, description);
		evt.inputFromToEvent(getDate(0,"MM/dd/yyyy"), getDate(0,"MM/dd/yyyy"), true);
		click(evt.ELEMENT_BUTTON_EVENT_MORE_DETAILS);
		Utils.pause(1000);
		check(evt.ELEMENT_IS_REPEAT_CHECKBOX,2);
		evt.inputRecurringInfoEvent(repeatType.Daily, null, null, repeatEndType.After);
		click(evt.ELEMENT_ADD_EVENT_SAVE_BUTTON);
		waitForElementNotPresent(evt.ELEMENT_ADD_EVENT_POPUP);
		Utils.pause(1000);
		info("Confirm added event displays in the calendar");
		assert evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"));
		assert evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"));
		assert evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"));

		/*Step number: 2
		 *Step Name: Step 2: Show Edit an event form
		 *Step Description: 
			- Edit an even from the series
		 *Input Data: 

		 *Expected Outcome: 
			- The pop up "Edit Recurring event" is displayed
			- The icon "Repeat" is checked*/

		/*Step number: 3
		 *Step Name: Step 3: Edit repeat option
		 *Step Description: 
			- Edit the repeat option
			- Click "Save"
		 *Input Data: 

		 *Expected Outcome: 
			- A confirmation pop up is displayed to ask user: "Would you like to change only this event, all events in the series, or this and all following events in the series?"
			- 3 options:  + Only this event + Following events + All events
			- The option "Only this Event" is selcted by Default*/

		/*Step number: 4
		 *Step Name: Step 4: Choose option to change
		 *Step Description: 
			- Choose "Following events"
			- Click "Save"
		 *Input Data: 

		 *Expected Outcome: 
			- Changes are appliyed for current & following events*/ 
		evt.editRecurringEvent(name,newName,description, null,null,null,true,selectDayOption.ALLDAY,recurringType.FOLLOW_EVENT,getDate(2, "MMM dd yyyy"));
		assert evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"));
		assert evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"));
		assert !evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"));
		assert evt.verifyEventInWeekView(newName, getDate(2, "MMM dd yyyy"));

		/*Clear data*/
		info("Clear data");
		evt.deleteRecurringEvent(name, selectDayOption.ALLDAY, recurringType.ALL_EVENT,getDate(0, "MMM dd yyyy"));
		evt.deleteRecurringEvent(newName, selectDayOption.ALLDAY, recurringType.ALL_EVENT,getDate(2, "MMM dd yyyy"));
	}

	/**
	 *Case ID:109235.
	 *Test Case Name: Edit a recurring event with "All events" option.
	 *Pre-Condition: A recurring event is created
	 *Post-Condition: 
	 *Done with OSs and browsers : 
	 *Generated by phuongdt at 2014/03/24 14:55:52
	 */
	@Test
	public  void test08_EditARecurringEventWithAllEventsOption() {
		String name ="event 109235";
		String description = "description 109235";
		String newName = "newevent109235";
		info("Test 8: Edit a recurring event with All events option");
		/*Step Number: 1
		 *Step Name: Step 1: Show recurring event
		 *Step Description: 
			- Connect to Intranet
			- Choose Calendar application
		 *Input Data: 

		 *Expected Outcome: 
			- The Calendar is displayed
			- A recurring event is displayed*/
		goToCalendarPage();
		evt.goToAddEventFromActionBar();
		evt.inputBasicQuickEvent(name, description);
		evt.inputFromToEvent(getDate(0,"MM/dd/yyyy"), getDate(0,"MM/dd/yyyy"), true);
		click(evt.ELEMENT_BUTTON_EVENT_MORE_DETAILS);
		Utils.pause(1000);
		check(evt.ELEMENT_IS_REPEAT_CHECKBOX,2);
		evt.inputRecurringInfoEvent(repeatType.Daily, null, null, repeatEndType.After);
		click(evt.ELEMENT_ADD_EVENT_SAVE_BUTTON);
		waitForElementNotPresent(evt.ELEMENT_ADD_EVENT_POPUP);
		Utils.pause(1000);
		info("Confirm added event displays in the calendar");
		assert evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"));
		assert evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"));
		assert evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"));


		/*Step number: 2
		 *Step Name: Step 2: Show Edit an event form
		 *Step Description: 
			- Edit an even from the series
		 *Input Data: 

		 *Expected Outcome: 
			- The pop up "Edit Recurring event" is displayed
			- The icon "Repeat" is checked*/

		/*Step number: 3
		 *Step Name: Step 3: Edit repeat option
		 *Step Description: 
			- Edit the repeat option
			- Click "Save"
		 *Input Data: 

		 *Expected Outcome: 
			- A confirmation pop up is displayed to ask user: "Would you like to change only this event, all events in the series, or this and all following events in the series?"
			- 3 options:  + Only this event + Following events + All events
			- The option "Only this Event" is selcted by Default*/

		/*Step number: 4
		 *Step Name: Step 4: Choose option to change
		 *Step Description: 
			- Choose "All events"
			- Click "Save"
		 *Input Data: 

		 *Expected Outcome: 
			- Changes are appliyed for all events*/ 
		evt.editRecurringEvent(name,newName,description, null,null,null,true,selectDayOption.ALLDAY,recurringType.ALL_EVENT,getDate(2, "MMM dd yyyy"));
		assert !evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"));
		assert !evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"));
		assert !evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"));
		assert evt.verifyEventInWeekView(newName, getDate(0, "MMM dd yyyy"));
		assert evt.verifyEventInWeekView(newName, getDate(1, "MMM dd yyyy"));
		assert evt.verifyEventInWeekView(newName, getDate(2, "MMM dd yyyy"));

		/*Clear data*/
		info("Clear data");
		evt.deleteRecurringEvent(newName, selectDayOption.ALLDAY, recurringType.ALL_EVENT,getDate(2, "MMM dd yyyy"));
	}

	/**
	 *Case ID:109236.
	 *Test Case Name: Delete Following events in recurring event.
	 *Pre-Condition: A recurring events is created
	 *Post-Condition: 
	 *Done with OSs and browsers : 
	 *Generated by phuongdt at 2014/03/24 14:55:52
	 */
	@Test
	public  void test09_DeleteFollowingEventsInRecurringEvent() {
		String name ="event 109236";
		String description = "description 109236";
		info("Test 9: Delete Following events in recurring event");
		/*Step Number: 1
		 *Step Name: <p>Step 1: Show calendar application<br data
		-mce
		-bogus="1"></p>
		 *Step Description: 
			- Connect to Intranet
			- Open "Calendar" application
		 *Input Data: 

		 *Expected Outcome: 
			- A recurring events is displayed*/
		goToCalendarPage();
		evt.goToAddEventFromActionBar();

		evt.inputBasicQuickEvent(name, description);
		evt.inputFromToEvent(getDate(0,"MM/dd/yyyy"), getDate(0,"MM/dd/yyyy"), false);
		click(evt.ELEMENT_BUTTON_EVENT_MORE_DETAILS);
		Utils.pause(1000);
		check(evt.ELEMENT_IS_REPEAT_CHECKBOX,2);
		evt.inputRecurringInfoEvent(repeatType.Daily, null, null, repeatEndType.After);
		click(evt.ELEMENT_ADD_EVENT_SAVE_BUTTON);
		waitForElementNotPresent(evt.ELEMENT_ADD_EVENT_POPUP);
		Utils.pause(1000);

		info("Confirm added event displays in the calendar");
		assert evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"), selectDayOption.ONEDAY);

		/*Step number: 2
		 *Step Name: <p>Step 2: Select a recurring event<br data
		-mce
		-bogus="1"></p>
		 *Step Description: 
			- Right click on event from the series
			- Choose the option "Delete"
		 *Input Data: 

		 *Expected Outcome: 
			- A pop upis displayed with:* A title: "Delete Recurring Event"* A message: Would you like to delete only this event, all events in the series, or this and all following events in the series?* The option 'Only this event" is selected by default* A button "Delete"*/

		/*Step number: 3
		 *Step Name: <p>Step 3: Delete only this event<br data
		-mce
		-bogus="1"></p>
		 *Step Description: 
			<p>
			- Choose the default option "Following events"<br>
			- Click "Delete"</p>
		 *Input Data: 

		 *Expected Outcome: 
			<p>
			- Selected and following event are deleted</p>*/ 
		evt.deleteRecurringEvent(name, selectDayOption.ONEDAY, recurringType.FOLLOW_EVENT,getDate(2, "MMM dd yyyy"));
		assert evt.verifyEventInWeekView(name, getDate(0, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert evt.verifyEventInWeekView(name, getDate(1, "MMM dd yyyy"), selectDayOption.ONEDAY);
		assert !evt.verifyEventInWeekView(name, getDate(2, "MMM dd yyyy"), selectDayOption.ONEDAY);
		/*Clear data*/
		info("Clear data");
		evt.deleteRecurringEvent(name, selectDayOption.ONEDAY, recurringType.FOLLOW_EVENT,getDate(0, "MMM dd yyyy"));
	}
}